library(RODBC)
library(tidyverse)
dremio_host <- Sys.getenv('endereco')
dremio_port <- Sys.getenv('port')
dremio_uid <- Sys.getenv('uid')
dremio_pwd <- Sys.getenv('datalake')
channel <- odbcDriverConnect(sprintf("DRIVER=Dremio Connector;HOST=%s;PORT=%s;UID=%s;PWD=%s;AUTHENTICATIONTYPE=Basic Authentication;CONNECTIONTYPE=Direct", dremio_host, dremio_port, dremio_uid, dremio_pwd))
#| warning: false
library(RODBC)
library(tidyverse)
dremio_host <- Sys.getenv('endereco')
dremio_port <- Sys.getenv('port')
dremio_uid <- Sys.getenv('uid')
dremio_pwd <- Sys.getenv('datalake')
channel <- odbcDriverConnect(sprintf("DRIVER=Dremio Connector;HOST=%s;PORT=%s;UID=%s;PWD=%s;AUTHENTICATIONTYPE=Basic Authentication;CONNECTIONTYPE=Direct", dremio_host, dremio_port, dremio_uid, dremio_pwd))
df_pop <- sqlQuery(channel, consulta_pop, as.is = TRUE)
consulta_pop <- 'SELECT * FROM "Analytics Layer".Territorial."População SVS por região de saúde e faixa etária"
WHERE ANO = 2021'
df_pop <- sqlQuery(channel, consulta_pop, as.is = TRUE)
View(df_pop)
DT::datatable(df_pop)
df_pop <- sqlQuery(channel, consulta_pop, as.is = TRUE) %>%
janitor::clean_names()
df_pop %>%
group_by(uf, faixa_etaria) %>%
summarize(pop = sum(pop)) %>%
ggplot(aes(x = faixa_etaria, y = pop)) + coord_flip() +
facet_grid(~uf)
df_pop %>%
group_by(uf, faixa_etaria) %>%
summarize(pop = sum(pop)) %>%
ggplot(aes(x = faixa_etaria, y = pop)) + coord_flip() +
facet_grid(uf)
df_pop <- sqlQuery(channel, consulta_pop) %>%
janitor::clean_names()
df_pop %>%
group_by(uf, faixa_etaria) %>%
summarize(pop = sum(pop)) %>%
ggplot(aes(x = faixa_etaria, y = pop)) + coord_flip() +
facet_grid(uf)
df_pop %>%
group_by(uf, faixa_etaria) %>%
summarize(pop = sum(pop))
df_pop %>%
group_by(uf, faixa_etaria) %>%
summarize(pop = sum(pop)) %>%
ggplot(aes(x = faixa_etaria, y = pop)) + coord_flip() +
facet_grid(~uf)
?facet_grid
df_pop %>%
group_by(uf, faixa_etaria) %>%
summarize(pop = sum(pop)) %>%
ggplot(aes(x = faixa_etaria, y = pop)) + coord_flip() +
facet_grid(~uf, rows = 27)
df_pop %>%
group_by(uf, faixa_etaria) %>%
summarize(pop = sum(pop)) %>%
ggplot(aes(x = faixa_etaria, y = pop)) + coord_flip() +
facet_wrap(~uf, rows = 27)
df_pop %>%
group_by(uf, faixa_etaria) %>%
summarize(pop = sum(pop)) %>%
ggplot(aes(x = faixa_etaria, y = pop)) + coord_flip() +
facet_wrap(uf, nrow = 27, scales = "free")
df_pop %>%
group_by(uf, faixa_etaria) %>%
summarize(pop = sum(pop)) %>%
ggplot(aes(x = faixa_etaria, y = pop)) + coord_flip() +
facet_wrap(~uf, nrow = 27, scales = "free")
df_pop %>%
group_by(uf, faixa_etaria) %>%
summarize(pop = sum(pop)) %>%
ggplot(aes(x = faixa_etaria, y = pop)) + coord_flip() +
facet_wrap(~uf, nrow = 27, scales = "free")
df_pop %>%
group_by(faixa_etaria) %>%
summarize(pop = sum(pop)) %>%
ggplot(aes(x = faixa_etaria, y = pop)) + coord_flip()
df_pop %>%
group_by(faixa_etaria) %>%
summarize(pop = sum(pop)) %>%
ggplot(aes(x = faixa_etaria, y = pop)) + geom_col() +coord_flip()
xlab("Faixa etária") + ylab("População") + theme_minimal()
df_pop %>%
group_by(faixa_etaria) %>%
summarize(pop = sum(pop)) %>%
ggplot(aes(x = faixa_etaria, y = pop)) + geom_col() + coord_flip()+
xlab("Faixa etária") + ylab("População") + theme_minimal()
#| warning: false
#| echo: false
options(scipen = 999)
library(RODBC)
library(tidyverse)
dremio_host <- Sys.getenv('endereco')
dremio_port <- Sys.getenv('port')
dremio_uid <- Sys.getenv('uid')
dremio_pwd <- Sys.getenv('datalake')
channel <- odbcDriverConnect(sprintf("DRIVER=Dremio Connector;HOST=%s;PORT=%s;UID=%s;PWD=%s;AUTHENTICATIONTYPE=Basic Authentication;CONNECTIONTYPE=Direct", dremio_host, dremio_port, dremio_uid, dremio_pwd))
consulta_pop <- 'SELECT * FROM "Analytics Layer".Territorial."População SVS por região de saúde e faixa etária"
WHERE ANO = 2021'
df_pop <- sqlQuery(channel, consulta_pop) %>%
janitor::clean_names()
DT::datatable(df_pop)
#| warning: false
df_pop %>%
group_by(faixa_etaria) %>%
summarize(pop = sum(pop)) %>%
ggplot(aes(x = faixa_etaria, y = pop)) + geom_col() + coord_flip()+
xlab("Faixa etária") + ylab("População") + theme_minimal()
#| warning: false
a <- df_pop %>%
group_by(faixa_etaria) %>%
summarize(pop = sum(pop)) %>%
ggplot(aes(x = faixa_etaria, y = pop)) + geom_col() + coord_flip()+
xlab("Faixa etária") + ylab("População") + theme_minimal()
plotly::ggplotly(a)
2023 - 5
2023 - 6
consulta_pop <- 'SELECT * FROM "Analytics Layer".Territorial."População SVS por região de saúde - ABEFACO-Daniel"
WHERE ANO = 2021'
df_pop <- sqlQuery(channel, consulta_pop) %>%
janitor::clean_names()
DT::datatable(df_pop)
#| warning: false
a <- df_pop %>%
group_by(faixa_etaria) %>%
summarize(pop = sum(pop)) %>%
ggplot(aes(x = faixa_etaria, y = pop)) + geom_col() + coord_flip()+
xlab("Faixa etária") + ylab("População") + theme_minimal() +
ggtitle("População por faixa etária")
plotly::ggplotly(a)
sinasc_2017 <- sqlQuery(channel, consulta_sinasc) %>%
janitor::clean_names()
consulta_sinasc <- 'SELECT * FROM "Analytics Layer"."Epidemiológico".Nascimentos."Nascidos Vivos por Região de Saúde"
where cast(ano as INT) >= 2017 AND cast(ano as INT) < 2020'
sinasc_2017 <- sqlQuery(channel, consulta_sinasc) %>%
janitor::clean_names()
sinasc_1720 %>%
ggplot(aes(x = ano, y = quantidade)) + geom_col() +
theme_minimal()
sinasc_2017 %>%
ggplot(aes(x = ano, y = quantidade)) + geom_col() +
theme_minimal()
projecoes_BA <- read_excel("01_script/nascidos_BA_PBI.xlsx")
library(tidyverse)
library(readxl)
#| warning: false
library(tidyverse)
library(readxl)
projecoes_BA <- read_excel("01_script/nascidos_BA_PBI.xlsx")
projecoes_BA <- read_excel("nascidos_BA_PBI.xlsx")
projecoes_BA <- read_excel("nascidos_BA_PBI.xlsx") %>%
mutate(ano = year(mes_ano))
projecoes_BA <- read_excel("nascidos_BA_PBI.xlsx") %>%
mutate(ano = year(mes_ano)) %>%
filter(ano == 2024)
filter(ano == 2024) %>%
group_by(uf_sigla, cod_reg_saude,
regiao_saude_pad, ano) %>%
summarise(quantidade = sum(quantidade))
projecoes_BA <- read_excel("nascidos_BA_PBI.xlsx") %>%
mutate(ano = year(mes_ano)) %>%
filter(ano == 2024) %>%
group_by(uf_sigla, cod_reg_saude,
regiao_saude_pad, ano) %>%
summarise(quantidade = sum(quantidade))
projecoes_BA <- read_excel("nascidos_BA_PBI.xlsx") %>%
mutate(ano = year(mes_ano)) %>%
filter(ano == 2024) %>%
group_by(uf_sigla, cod_regsaude,
regiao_saude_pad, ano) %>%
summarise(quantidade = sum(quantidade))
projecoes_BA <- read_excel("nascidos_BA_PBI.xlsx") %>%
mutate(ano = year(mes_ano)) %>%
filter(ano == 2024) %>%
group_by(uf_sigla, cod_regsaud,
regiao_saude_pad, ano) %>%
summarise(quantidade = sum(quantidade))
View(projecoes_BA)
projecoes_BA %>%
ggplot(aes(x = regiao_saude_pad, y = quantidade)) + geom_col() + coord_flip()
projecoes_BA %>%
ggplot(aes(x = fct_reorder(regiao_saude_pad, quantidade), y = quantidade)) + geom_col() + coord_flip()
projecoes_BA %>%
ggplot(aes(x = fct_reorder(regiao_saude_pad, quantidade), y = quantidade)) + geom_col() + coord_flip() + xlab("Região de saúde") + ylad("Quantidade de nascidos")
projecoes_BA %>%
ggplot(aes(x = fct_reorder(regiao_saude_pad, quantidade), y = quantidade)) + geom_col() + coord_flip() + xlab("Região de saúde") + ylab("Quantidade de nascidos") + theme_minimal()
consulta_sinasc <- 'SELECT * FROM "Analytics Layer"."Epidemiológico".Nascimentos."Nascidos Vivos por Região de Saúde"
where cast(ano as INT) >= 2017 AND cast(ano as INT) < 2020'
sinasc_1720 <- sqlQuery(channel, consulta_sinasc) %>%
janitor::clean_names()
#| warning: false
library(tidyverse)
library(readxl)
library(RODBC)
consulta_sinasc <- 'SELECT * FROM "Analytics Layer"."Epidemiológico".Nascimentos."Nascidos Vivos por Região de Saúde"
where cast(ano as INT) >= 2017 AND cast(ano as INT) < 2020'
sinasc_1720 <- sqlQuery(channel, consulta_sinasc) %>%
janitor::clean_names()
#| warning: false
#| echo: false
options(scipen = 999)
library(RODBC)
library(tidyverse)
dremio_host <- Sys.getenv('endereco')
dremio_port <- Sys.getenv('port')
dremio_uid <- Sys.getenv('uid')
dremio_pwd <- Sys.getenv('datalake')
channel <- odbcDriverConnect(sprintf("DRIVER=Dremio Connector;HOST=%s;PORT=%s;UID=%s;PWD=%s;AUTHENTICATIONTYPE=Basic Authentication;CONNECTIONTYPE=Direct", dremio_host, dremio_port, dremio_uid, dremio_pwd))
consulta_sinasc <- 'SELECT * FROM "Analytics Layer"."Epidemiológico".Nascimentos."Nascidos Vivos por Região de Saúde"
where cast(ano as INT) >= 2017 AND cast(ano as INT) < 2020'
sinasc_1720 <- sqlQuery(channel, consulta_sinasc) %>%
janitor::clean_names()
b <- sinasc_2017 %>%
ggplot(aes(x = ano, y = quantidade)) + geom_col() +
xlab("Ano") + ylab("Quantidade") +
theme_minimal()
b <- sinasc_1720 %>%
ggplot(aes(x = ano, y = quantidade)) + geom_col() +
xlab("Ano") + ylab("Quantidade") +
theme_minimal()
plotly::ggplotly(b)
b <- sinasc_1720 %>%
filter(uf_sigla == "BA") %>%
ggplot(aes(x = ano, y = quantidade)) + geom_col() +
xlab("Ano") + ylab("Quantidade") +
theme_minimal()
plotly::ggplotly(b)
b <- sinasc_1720 %>%
filter(uf_sigla == "BA") %>%
group_by(uf_sigla, cod_regsaud, regiao_saude_pad, ano) %>%
summarise(quantidade = sum(quantidade)) %>%
ggplot(aes(x = regiao_saude_pad, y = quantidade)) + geom_col() + coord_flip() +
xlab("Ano") + ylab("Quantidade") + facet_grid(~ano)
plotly::ggplotly(b)
b <- sinasc_1720 %>%
filter(uf_sigla == "BA") %>%
group_by(uf_sigla, cod_regsaud, regiao_saude_pad, ano) %>%
summarise(quantidade = sum(quantidade)) %>%
ggplot(aes(x = fct_reorder(regiao_saude_pad,quantidade), y = quantidade)) +
geom_col() + coord_flip() + xlab("Ano") + ylab("Quantidade") +
facet_grid(~ano) + theme_minimal()
plotly::ggplotly(b)
ggplot(aes(x = ano, y = quantidade, col = regiao_saude_pad)) +
geom_line() + xlab("Ano") + ylab("Quantidade") +
facet_grid(~ano) + theme_minimal()
ggplot(aes(x = ano, y = quantidade, col = regiao_saude_pad)) +
geom_line() + xlab("Ano") + ylab("Quantidade") + theme_minimal()
b <- sinasc_1720 %>%
filter(uf_sigla == "BA") %>%
group_by(uf_sigla, cod_regsaud, regiao_saude_pad, ano) %>%
summarise(quantidade = sum(quantidade)) %>%
ggplot(aes(x = ano, y = quantidade, col = regiao_saude_pad)) +
geom_line() + xlab("Ano") + ylab("Quantidade") + theme_minimal()
plotly::ggplotly(b)
