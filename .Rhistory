summarise(quantidade = sum(quantidade))
projecoes_BA <- read_excel("nascidos_BA_PBI.xlsx") %>%
mutate(ano = year(mes_ano)) %>%
filter(ano == 2024) %>%
group_by(uf_sigla, cod_reg_saude,
regiao_saude_pad, ano) %>%
summarise(quantidade = sum(quantidade))
projecoes_BA <- read_excel("nascidos_BA_PBI.xlsx") %>%
mutate(ano = year(mes_ano)) %>%
filter(ano == 2024) %>%
group_by(uf_sigla, cod_regsaude,
regiao_saude_pad, ano) %>%
summarise(quantidade = sum(quantidade))
projecoes_BA <- read_excel("nascidos_BA_PBI.xlsx") %>%
mutate(ano = year(mes_ano)) %>%
filter(ano == 2024) %>%
group_by(uf_sigla, cod_regsaud,
regiao_saude_pad, ano) %>%
summarise(quantidade = sum(quantidade))
View(projecoes_BA)
projecoes_BA %>%
ggplot(aes(x = regiao_saude_pad, y = quantidade)) + geom_col() + coord_flip()
projecoes_BA %>%
ggplot(aes(x = fct_reorder(regiao_saude_pad, quantidade), y = quantidade)) + geom_col() + coord_flip()
projecoes_BA %>%
ggplot(aes(x = fct_reorder(regiao_saude_pad, quantidade), y = quantidade)) + geom_col() + coord_flip() + xlab("Região de saúde") + ylad("Quantidade de nascidos")
projecoes_BA %>%
ggplot(aes(x = fct_reorder(regiao_saude_pad, quantidade), y = quantidade)) + geom_col() + coord_flip() + xlab("Região de saúde") + ylab("Quantidade de nascidos") + theme_minimal()
consulta_sinasc <- 'SELECT * FROM "Analytics Layer"."Epidemiológico".Nascimentos."Nascidos Vivos por Região de Saúde"
where cast(ano as INT) >= 2017 AND cast(ano as INT) < 2020'
sinasc_1720 <- sqlQuery(channel, consulta_sinasc) %>%
janitor::clean_names()
#| warning: false
library(tidyverse)
library(readxl)
library(RODBC)
consulta_sinasc <- 'SELECT * FROM "Analytics Layer"."Epidemiológico".Nascimentos."Nascidos Vivos por Região de Saúde"
where cast(ano as INT) >= 2017 AND cast(ano as INT) < 2020'
sinasc_1720 <- sqlQuery(channel, consulta_sinasc) %>%
janitor::clean_names()
#| warning: false
#| echo: false
options(scipen = 999)
library(RODBC)
library(tidyverse)
dremio_host <- Sys.getenv('endereco')
dremio_port <- Sys.getenv('port')
dremio_uid <- Sys.getenv('uid')
dremio_pwd <- Sys.getenv('datalake')
channel <- odbcDriverConnect(sprintf("DRIVER=Dremio Connector;HOST=%s;PORT=%s;UID=%s;PWD=%s;AUTHENTICATIONTYPE=Basic Authentication;CONNECTIONTYPE=Direct", dremio_host, dremio_port, dremio_uid, dremio_pwd))
consulta_sinasc <- 'SELECT * FROM "Analytics Layer"."Epidemiológico".Nascimentos."Nascidos Vivos por Região de Saúde"
where cast(ano as INT) >= 2017 AND cast(ano as INT) < 2020'
sinasc_1720 <- sqlQuery(channel, consulta_sinasc) %>%
janitor::clean_names()
b <- sinasc_2017 %>%
ggplot(aes(x = ano, y = quantidade)) + geom_col() +
xlab("Ano") + ylab("Quantidade") +
theme_minimal()
b <- sinasc_1720 %>%
ggplot(aes(x = ano, y = quantidade)) + geom_col() +
xlab("Ano") + ylab("Quantidade") +
theme_minimal()
plotly::ggplotly(b)
b <- sinasc_1720 %>%
filter(uf_sigla == "BA") %>%
ggplot(aes(x = ano, y = quantidade)) + geom_col() +
xlab("Ano") + ylab("Quantidade") +
theme_minimal()
plotly::ggplotly(b)
b <- sinasc_1720 %>%
filter(uf_sigla == "BA") %>%
group_by(uf_sigla, cod_regsaud, regiao_saude_pad, ano) %>%
summarise(quantidade = sum(quantidade)) %>%
ggplot(aes(x = regiao_saude_pad, y = quantidade)) + geom_col() + coord_flip() +
xlab("Ano") + ylab("Quantidade") + facet_grid(~ano)
plotly::ggplotly(b)
b <- sinasc_1720 %>%
filter(uf_sigla == "BA") %>%
group_by(uf_sigla, cod_regsaud, regiao_saude_pad, ano) %>%
summarise(quantidade = sum(quantidade)) %>%
ggplot(aes(x = fct_reorder(regiao_saude_pad,quantidade), y = quantidade)) +
geom_col() + coord_flip() + xlab("Ano") + ylab("Quantidade") +
facet_grid(~ano) + theme_minimal()
plotly::ggplotly(b)
ggplot(aes(x = ano, y = quantidade, col = regiao_saude_pad)) +
geom_line() + xlab("Ano") + ylab("Quantidade") +
facet_grid(~ano) + theme_minimal()
ggplot(aes(x = ano, y = quantidade, col = regiao_saude_pad)) +
geom_line() + xlab("Ano") + ylab("Quantidade") + theme_minimal()
b <- sinasc_1720 %>%
filter(uf_sigla == "BA") %>%
group_by(uf_sigla, cod_regsaud, regiao_saude_pad, ano) %>%
summarise(quantidade = sum(quantidade)) %>%
ggplot(aes(x = ano, y = quantidade, col = regiao_saude_pad)) +
geom_line() + xlab("Ano") + ylab("Quantidade") + theme_minimal()
plotly::ggplotly(b)
previsoes_go <- read_excel("01_script/00_bases/previsoes_go.xlsx",
col_types = c("text", "numeric", "numeric",
"numeric", "text", "numeric", "date"))
#| warning: false
#| echo: false
options(scipen = 999)
library(RODBC)
library(tidyverse)
dremio_host <- Sys.getenv('endereco')
dremio_port <- Sys.getenv('port')
dremio_uid <- Sys.getenv('uid')
dremio_pwd <- Sys.getenv('datalake')
channel <- odbcDriverConnect(sprintf("DRIVER=Dremio Connector;HOST=%s;PORT=%s;UID=%s;PWD=%s;AUTHENTICATIONTYPE=Basic Authentication;CONNECTIONTYPE=Direct", dremio_host, dremio_port, dremio_uid, dremio_pwd))
#| warning: false
library(tidyverse)
library(readxl)
library(RODBC)
previsoes_go <- read_excel("01_script/00_bases/previsoes_go.xlsx",
col_types = c("text", "numeric", "numeric",
"numeric", "text", "numeric", "date"))
previsoes_go <- read_excel("00_bases/previsoes_go.xlsx",
col_types = c("text", "numeric", "numeric",
"numeric", "text", "numeric", "date"))
previsoes_go <- read_excel("00_bases/previsoes_go.xlsx",
col_types = c("text", "numeric", "numeric",
"numeric", "text", "numeric", "date")) %>%
mutate(ano = year(data))
previsoes_go %>%
filter(2024) %>%
group_by(Estado) %>%
summarise(sum(qtd))
summarise(qtd = sum(qtd)
total_nascidos <- previsoes_go %>%
filter(ano == 2024) %>%
group_by(Estado) %>%
summarise(qtd = sum(qtd))
View(total_nascidos)
previsoes_go %>%
mutate(mes = month(data)) %>%
filter(ano > 2022 | ano < 2023)
previsoes_go %>%
mutate(mes = month(data)) %>%
filter(ano > 2022 & ano < 2023)
previsoes_go %>%
mutate(mes = month(data)) %>%
filter(ano >= 2022 & ano < 2024)
qtd_nascidos <- previsoes_go %>%
filter(ano == 2024) %>%
group_by(Estado, codibge) %>%
summarise(qtd = sum(qtd))
qtd_nascidos_go <- previsoes_go %>%
filter(ano == 2024) %>%
group_by(Estado, codibge) %>%
summarise(qtd = sum(qtd))
View(qtd_nascidos_go)
qtd_nascidos_go <- previsoes_go %>%
filter(ano == 2024) %>%
group_by(Estado, codibge) %>%
summarise(qtd = round(sum(qtd)))
previsoes_go %>%
mutate(mes = month(data)) %>%
filter((ano >= 2022 & mes > 9) | (ano <= 2023 & mes < 10))
previsoes_go %>%
mutate(mes = month(data)) %>%
filter((ano >= 2022 & mes > 9) & (ano <= 2023 & mes < 10))
previsoes_go %>%
mutate(mes = month(data)) %>%
filter(ano >= 2022 & mes > 9) %>%
filter(ano <= 2023 & mes < 10)
previsoes_go %>%
mutate(mes = month(data)) %>%
filter(ano >= 2022 & mes > 9)
previsoes_go %>%
mutate(mes = month(data)) %>%
filter(ano >= 2022 & mes > 9) %>%
filter(ano <= 2023 & mes < 10)
previsoes_go %>%
mutate(mes = month(data)) %>%
filter(ano >= 2022 & mes > 9) %>%
filter(ano <= 2023)
previsoes_go %>%
mutate(mes = month(data)) %>%
filter(ano >= 2022 & mes > 9) %>%
filter(ano < 2024 & mes < 10)
previsoes_go %>%
mutate(mes = month(data)) %>%
filter(ano >= 2022 & mes > 9)
previsoes_go %>%
mutate(mes = month(data)) %>%
filter((ano >= 2022 & mes > 9) & (ano < 2024 & mes < 10))
previsoes_go %>%
mutate(mes = month(data)) %>%
filter((ano >= 2022 & mes > 9) & (ano < 2024))
previsoes_go %>%
mutate(mes = month(data)) %>%
filter(data >= 2022-10-01)
previsoes_go %>%
mutate(mes = month(data)) %>%
filter(data >= "2022-10-01")
previsoes_go %>%
mutate(mes = month(data)) %>%
filter(data >= "2022-10-01" & data <= "2023-09-01")
previsoes_go %>%
mutate(mes = month(data)) %>%
filter(data >= "2022-09-01" & data <= "2023-09-01")
previsoes_go %>%
mutate(mes = month(data)) %>%
filter(data > "2022-09-01" & data <= "2023-09-01")
previsoes_go %>%
mutate(mes = month(data)) %>%
filter(data > "2022-09-01" & data <= "2023-09-01") %>%
group_by(codibge) %>%
summarise(qtd = sum(qtd))
previsoes_go %>%
mutate(mes = month(data)) %>%
filter(data > "2022-09-01" & data <= "2023-09-01") %>%
group_by(codibge) %>%
summarise(qtd = round(sum(qtd)))
qtd_15_meses <-
previsoes_go %>%
mutate(mes = month(data)) %>%
filter(data > "2022-09-01" & data <= "2023-09-01") %>%
group_by(codibge) %>%
summarise(qtd = round(sum(qtd)))
#| warning: false
qtd_15_meses <-
previsoes_go %>%
mutate(mes = month(data)) %>%
filter(data > "2022-09-01" & data <= "2023-09-01") %>%
group_by(codibge) %>%
summarise(qtd = round(sum(qtd)))
qtd_15_meses <-
previsoes_go %>%
mutate(mes = month(data)) %>%
filter(data > "2022-09-01" & data <= "2023-09-01") %>%
group_by(codibge) %>%
summarise(qtd_15_meses = round(sum(qtd)))
qtd_nascidos_go <- previsoes_go %>%
filter(ano == 2024) %>%
group_by(Estado, codibge) %>%
summarise(qtd_nascidos = round(sum(qtd)))
qtd_gestantes <-
previsoes_go %>%
mutate(mes = month(data)) %>%
filter(data > "2024-08-01" & data <= "2025-08-01") %>%
group_by(codibge) %>%
summarise(qtd_gestantes = round(sum(qtd)))
View(qtd_gestantes)
qtd_gestantes <-
previsoes_go %>%
mutate(mes = month(data)) %>%
filter(data > "2024-08-01" & data <= "2025-08-01")
#| warning: false
#| echo: false
options(scipen = 999)
library(RODBC)
library(tidyverse)
dremio_host <- Sys.getenv('endereco')
dremio_port <- Sys.getenv('port')
dremio_uid <- Sys.getenv('uid')
dremio_pwd <- Sys.getenv('datalake')
channel <- odbcDriverConnect(sprintf("DRIVER=Dremio Connector;HOST=%s;PORT=%s;UID=%s;PWD=%s;AUTHENTICATIONTYPE=Basic Authentication;CONNECTIONTYPE=Direct", dremio_host, dremio_port, dremio_uid, dremio_pwd))
#| warning: false
library(tidyverse)
library(readxl)
library(RODBC)
#| warning: false
previsoes_go <- read_excel("00_bases/previsoes_go.xlsx",
col_types = c("text", "numeric", "numeric",
"numeric", "text", "numeric", "date")) %>%
mutate(ano = year(data))
previsoes_go %>%
filter(ano == 2024) %>%
group_by(Estado) %>%
summarise(qtd = sum(qtd))
qtd_nascidos_go <- previsoes_go %>%
filter(ano == 2024) %>%
group_by(Estado, codibge) %>%
summarise(qtd_nascidos = round(sum(qtd)))
#| warning: false
qtd_15_meses <-
previsoes_go %>%
mutate(mes = month(data)) %>%
filter(data > "2022-09-01" & data <= "2023-09-01") %>%
group_by(codibge) %>%
summarise(qtd_15_meses = round(sum(qtd)))
qtd_gestantes <-
previsoes_go %>%
mutate(mes = month(data)) %>%
filter(data > "2024-08-01" & data <= "2025-08-01") %>%
group_by(codibge) %>%
summarise(qtd_gestantes = round(sum(qtd)))
consulta_sinasc <- 'SELECT * FROM "Analytics Layer"."Epidemiológico".Nascimentos."Nascidos Vivos por Região de Saúde"
where cast(ano as INT) >= 2017 AND cast(ano as INT) < 2020'
sinasc_1720 <- sqlQuery(channel, consulta_sinasc) %>%
janitor::clean_names()
sinasc_1720 %>%
filter(uf_sigla == "GO") %>%
group_by(uf_sigla, cod_regsaud, regiao_saude_pad, ano) %>%
summarise(quantidade = sum(quantidade))
consulta_sinasc <- 'SELECT * FROM "Analytics Layer"."Epidemiológico".Nascimentos."Nascidos Vivos por Região de Saúde"
where (cast(ano as INT) >= 2017 AND cast(ano as INT) < 2020)'
sinasc_1720 <- sqlQuery(channel, consulta_sinasc) %>%
janitor::clean_names()
qtd_4_6 <-
sinasc_1720 %>%
filter(uf_sigla == "GO") %>%
group_by(uf_sigla, cod_regsaud, regiao_saude_pad) %>%
summarise(qtd_4_6 = sum(quantidade))
View(qtd_4_6)
consulta_sinasc <- 'SELECT * FROM "Analytics Layer"."Epidemiológico".Nascimentos."Nascidos Vivos por Região de Saúde"
where (cast(ano as INT) >= 2018 AND cast(ano as INT) < 2021)'
sinasc_1720 <- sqlQuery(channel, consulta_sinasc) %>%
janitor::clean_names()
qtd_4_6 <-
sinasc_1720 %>%
filter(uf_sigla == "GO") %>%
group_by(uf_sigla, cod_regsaud, regiao_saude_pad) %>%
summarise(qtd_4_6 = sum(quantidade))
consulta_pop <- 'SELECT * FROM "Analytics Layer".Territorial."População SVS por região de saúde - ABEFACO-Daniel"
WHERE ANO = 2021'
df_pop <- sqlQuery(channel, consulta_pop) %>%
janitor::clean_names()
DT::datatable(df_pop)
df_pop <- sqlQuery(channel, consulta_pop) %>%
janitor::clean_names() %>%
filter(uf = "Goiás")
df_pop <- sqlQuery(channel, consulta_pop) %>%
janitor::clean_names() %>%
filter(uf == "Goiás")
DT::datatable(df_pop)
df_pop <- sqlQuery(channel, consulta_pop) %>%
janitor::clean_names() %>%
filter(uf == "Goiás") %>%
filter(faixa_etaria != "0 a 9")
DT::datatable(df_pop)
df_pop <- sqlQuery(channel, consulta_pop) %>%
janitor::clean_names() %>%
filter(uf == "Goiás") %>%
filter(faixa_etaria != "0 a 9") %>%
select(-ano, regiao_saude)
DT::datatable(df_pop)
consulta_pop <- 'SELECT * FROM "Analytics Layer".Territorial."População SVS por região de saúde - ABEFACO-Daniel"
WHERE ANO = 2021'
df_pop <- sqlQuery(channel, consulta_pop) %>%
janitor::clean_names() %>%
filter(uf == "Goiás") %>%
filter(faixa_etaria != "0 a 9") %>%
select(-ano, regiao_saude)
DT::datatable(df_pop)
#| warning: false
consulta_sinasc <- 'SELECT * FROM "Analytics Layer"."Epidemiológico".Nascimentos."Nascidos Vivos por Região de Saúde"
where (cast(ano as INT) >= 2018 AND cast(ano as INT) < 2021)'
sinasc_1720 <- sqlQuery(channel, consulta_sinasc) %>%
janitor::clean_names()
qtd_4_6 <-
sinasc_1720 %>%
filter(uf_sigla == "GO") %>%
group_by(uf_sigla, cod_regsaud, regiao_saude_pad) %>%
summarise(qtd_4_6 = sum(quantidade))
df_pop <- sqlQuery(channel, consulta_pop) %>%
janitor::clean_names() %>%
filter(uf == "Goiás") %>%
filter(faixa_etaria != "0 a 9") %>%
select(-ano, -regiao_saude) %>%
spread(faixa_etaria, pop)
DT::datatable(df_pop)
qtd_nascidos_go %>%
left_join(qtd_gestantes, by = "codibge")
qtd_nascidos_go %>%
left_join(qtd_gestantes, by = "codibge") %>%
left_join(qtd_15_meses, by = "codibge")
qtd_nascidos_go %>%
left_join(qtd_gestantes, by = "codibge") %>%
left_join(qtd_15_meses, by = "codibge") %>%
left_join(qtd_4_6)
qtd_nascidos_go %>%
left_join(qtd_gestantes, by = "codibge") %>%
left_join(qtd_15_meses, by = "codibge") %>%
left_join(qtd_4_6, by = "cod_regsaud")
qtd_nascidos_go %>%
left_join(qtd_gestantes, by = "codibge") %>%
left_join(qtd_15_meses, by = "codibge") %>%
left_join(qtd_4_6, by = c("codibge"="cod_regsaud"))
qtd_nascidos_go %>%
left_join(qtd_gestantes, by = "codibge") %>%
left_join(qtd_15_meses, by = "codibge") %>%
left_join(qtd_4_6, by = c("codibge"="cod_regsaud")) %>%
left_join(df_pop, by = c("codibge"="cod_regsaud"))
df_pop <- sqlQuery(channel, consulta_pop) %>%
janitor::clean_names() %>%
filter(uf == "Goiás") %>%
filter(faixa_etaria != "0 a 9") %>%
select(-ano, -regiao_saude, -uf) %>%
spread(faixa_etaria, pop)
qtd_nascidos_go %>%
left_join(qtd_gestantes, by = "codibge") %>%
left_join(qtd_15_meses, by = "codibge") %>%
left_join(qtd_4_6, by = c("codibge"="cod_regsaud")) %>%
left_join(df_pop, by = c("codibge"="cod_regsaud"))
qtd_nascidos_go %>%
left_join(qtd_gestantes, by = "codibge") %>%
left_join(qtd_15_meses, by = "codibge") %>%
left_join(qtd_4_6, by = c("codibge"="cod_regsaud")) %>%
left_join(df_pop, by = c("codibge"="cod_regsaud")) %>%
relocate(regio_saude_pad, .after = codibge)
qtd_nascidos_go %>%
left_join(qtd_gestantes, by = "codibge") %>%
left_join(qtd_15_meses, by = "codibge") %>%
left_join(qtd_4_6, by = c("codibge"="cod_regsaud")) %>%
left_join(df_pop, by = c("codibge"="cod_regsaud"))
qtd_nascidos_go %>%
left_join(qtd_gestantes, by = "codibge") %>%
left_join(qtd_15_meses, by = "codibge") %>%
left_join(qtd_4_6, by = c("codibge"="cod_regsaud")) %>%
left_join(df_pop, by = c("codibge"="cod_regsaud")) %>%
relocate(regiao_saude_pad, .after = codibge)
qtd_nascidos_go %>%
left_join(qtd_gestantes, by = "codibge") %>%
left_join(qtd_15_meses, by = "codibge") %>%
left_join(qtd_4_6, by = c("codibge"="cod_regsaud")) %>%
left_join(df_pop, by = c("codibge"="cod_regsaud")) %>%
relocate(regiao_saude_pad, .after = codibge) %>%
select(-uf_sigla)
View(qtd_4_6)
basepbi_spread <-
qtd_nascidos_go %>%
left_join(qtd_gestantes, by = "codibge") %>%
left_join(qtd_15_meses, by = "codibge") %>%
left_join(qtd_4_6, by = c("codibge"="cod_regsaud")) %>%
left_join(df_pop, by = c("codibge"="cod_regsaud")) %>%
relocate(regiao_saude_pad, .after = codibge) %>%
select(-uf_sigla)
View(basepbi_spread)
basepbi_gather <-
basepbi_spread %>%
gather(key = "publico", value = "quantidade",
4:10)
View(basepbi_gather)
18*7
writexl::write_xlsx(basepbi_gather, "pbi_abefaco_g.xlsx")
writexl::write_xlsx(basepbi_spread, "pbi_abefaco_s.xlsx")
#| warning: false
#| echo: false
options(scipen = 999)
library(RODBC)
library(tidyverse)
dremio_host <- Sys.getenv('endereco')
dremio_port <- Sys.getenv('port')
dremio_uid <- Sys.getenv('uid')
dremio_pwd <- Sys.getenv('datalake')
channel <- odbcDriverConnect(sprintf("DRIVER=Dremio Connector;HOST=%s;PORT=%s;UID=%s;PWD=%s;AUTHENTICATIONTYPE=Basic Authentication;CONNECTIONTYPE=Direct", dremio_host, dremio_port, dremio_uid, dremio_pwd))
consulta_oferta <- 'SELECT * FROM "Analytics Layer".Infraestrutura.Profissionais."Profissionais APS - técnicos e auxiliares de enfermagem"'
oferta <- sqlQuery(channel, consulta_oferta)
oferta %>%
mutate(ano = as.character(COMPETEN)) %>%
mutate(ano = substr(ano, 1, 4)) %>%
mutate(horas = HORAOUTR + HORAHOSP + HORA_AMB) %>%
group_by(uf, cod_regsaud, regiao_saude,
ano) %>%
summarise(horas_oferta = sum(horas)) %>%
mutate(fte40 = horas_oferta/126)
oferta %>%
mutate(ano = as.character(COMPETEN)) %>%
mutate(ano = substr(ano, 1, 4)) %>%
filter(ano == '2022') %>%
mutate(horas = HORAOUTR + HORAHOSP + HORA_AMB) %>%
group_by(uf, cod_regsaud, regiao_saude,
ano) %>%
summarise(horas_oferta = sum(horas)) %>%
mutate(fte40 = horas_oferta/126)
writexl::write_xlsx(oferta, "oferta_fts_abefaco.xlsx")
oferta_tratada <-
oferta %>%
mutate(ano = as.character(COMPETEN)) %>%
mutate(ano = substr(ano, 1, 4)) %>%
filter(ano == '2022') %>%
mutate(horas = HORAOUTR + HORAHOSP + HORA_AMB) %>%
group_by(uf, cod_regsaud, regiao_saude,
ano) %>%
summarise(horas_oferta = sum(horas)) %>%
mutate(fte40 = horas_oferta/126)
writexl::write_xlsx(oferta_tratada, "oferta_fts_abefaco.xlsx")
View(oferta_tratada)
setwd("~/GitHub/dimensionamento/11_previsões/01_scritp_tratamento")
options(scipen = 999)
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
if (!require(RODBC)) { install.packages(RODBC); require(RODBC) }
dremio_host <- "200.137.215.27"
dremio_port <- "31010"
dremio_uid <- "daniel"
dremio_pwd <- Sys.getenv("datalake")
channel <- odbcDriverConnect(sprintf("DRIVER=Dremio Connector;HOST=%s;PORT=%s;UID=%s;PWD=%s;AUTHENTICATIONTYPE=Basic Authentication;CONNECTIONTYPE=Direct", dremio_host, dremio_port, dremio_uid, dremio_pwd))
library(tidyverse)
library(lubridate)
consulta <- 'SELECT * FROM "@daniel"."teste meta 5"'
previsoes <- sqlQuery(channel, consulta,
as.is = TRUE)
previsoes_tratado <- previsoes %>%
mutate(mes_ano = ym(COMPETEN)) %>%
mutate(uf = if_else(substr(CODUFMUN, 1, 2) == "13",
"AM","RS")) %>%
janitor::clean_names() %>%
group_by(uf, municipio_pad, nomeprof, mes_ano) %>%
count() %>%
ungroup()
#writexl::write_xlsx(previsoes_tratado, "migracao.xlsx")
# teste -------------------------------------------------------------------
previsoes_tratado %>%
ggplot(aes(x = mes_ano, y = municipio_pad, col = uf, size = 3)) + geom_line() +
facet_wrap(~nomeprof) + theme_minimal() + xlab("Mês/ano") + ylab("Município")
usethis::edit_r_environ()
